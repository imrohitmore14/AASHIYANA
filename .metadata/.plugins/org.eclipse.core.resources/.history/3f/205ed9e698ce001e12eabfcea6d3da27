package com.aashiyana.service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.aashiyana.dao.HotelDao;
import com.aashiyana.dao.RoomDao;
import com.aashiyana.entity.Hotel;
import com.aashiyana.entity.Room;
import com.aashiyana.exception.HotelServiceException;

@Service
@Transactional
public class RoomService {
	@Autowired
	private RoomDao roomDao;
	
	public int register(Room room) {
		int count = roomDao.findIfRoomExists(room.getRoomId());
		if(count == 1)
			throw new HotelServiceException("Room already registered!");
		else {
			roomDao.save(room);
			return room.getRoomId();
		}
	}

	
	public Room fetchByRoomId(int id) {
		Optional<Room> room = roomDao.findById(id);
		if(room.isPresent())
			return room.get();
		else
			throw new HotelServiceException("Customer with id " + id + " does not exist!");
	}


//	public List<Room> getAllRoomsByHotelId(long hotelId) {
//		// TODO Auto-generated method stub
//		return null;
//	}
	
	 public List<Room> getAllRoomsByHotelId(long hotelId) {
	        // Implement the logic to fetch all rooms based on the hotel ID
	        // You may use the RoomRepository or any other mechanism to fetch data from the database
	        // For example:
	        return roomDao.findByHotelHotelId(hotelId);
	    }


	public void deleteRoom(int id) {
		//create method in dao
		//first fetch the room
		 Optional<Room> room = roomDao.findByRoomId(id);

		 //check if the room is present
		    if (room.isPresent()) {
		    	//if present delete
		    	roomDao.delete(room.get());
		    } else {
		        throw new HotelServiceException("room with id " + id + " does not exist!");
		    }
		
	}


	public List<String> getAllRoomTypes() {
		// TODO Auto-generated method stub
		return null;
	}


	public double getRoomRateByType(String type) {
		// TODO Auto-generated method stub
		return 0;
	}


	
}
